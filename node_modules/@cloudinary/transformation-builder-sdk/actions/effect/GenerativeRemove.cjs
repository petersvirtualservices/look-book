'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib_es6 = require('../../tslib.es6-5bb8bdb3.cjs');
var internal_Action = require('../../internal/Action.cjs');
var internal_qualifier_QualifierValue = require('../../internal/qualifier/QualifierValue.cjs');
var internal_qualifier_Qualifier = require('../../internal/qualifier/Qualifier.cjs');
require('../../qualifiers/flag/FlagQualifier.cjs');
require('../../internal/utils/dataStructureUtils.cjs');
require('../../internal/models/ActionModel.cjs');
require('../../internal/models/actionToJson.cjs');
require('../../internal/utils/unsupportedError.cjs');
require('../../internal/models/QualifierModel.cjs');
require('../../internal/models/qualifierToJson.cjs');

/**
 * @description A class that defines how to remove objects from an asset using Generative AI
 * @extends SDK.Action
 * @memberOf Actions.Effect
 * @see Visit {@link Actions.Effect|Effect} for an example
 */
var GenerativeRemove = /** @class */ (function (_super) {
    tslib_es6.__extends(GenerativeRemove, _super);
    function GenerativeRemove() {
        var _this = _super.call(this) || this;
        _this._prompts = [];
        _this._regions = [];
        _this._detectMultiple = false;
        _this._actionModel.actionType = "generativeRemove";
        return _this;
    }
    GenerativeRemove.prototype.prompt = function (value) {
        return this.prompts([value]);
    };
    GenerativeRemove.prototype.prompts = function (value) {
        this._prompts = value;
        if (this._prompts) {
            this._actionModel.prompts = this._prompts;
        }
        return this;
    };
    GenerativeRemove.prototype.region = function (value) {
        return this.regions([value]);
    };
    GenerativeRemove.prototype.regions = function (value) {
        this._regions = value;
        if (this._regions) {
            this._actionModel.regions = this._regions;
        }
        return this;
    };
    GenerativeRemove.prototype.detectMultiple = function (value) {
        if (value === void 0) { value = true; }
        this._detectMultiple = value;
        if (this._detectMultiple) {
            this._actionModel.detectMultiple = this._detectMultiple;
        }
        return this;
    };
    GenerativeRemove.prototype.prepareQualifiers = function () {
        switch (true) {
            case this._prompts.length === 1: {
                return this.preparePromptQualifier();
            }
            case this._prompts.length > 1: {
                return this.preparePromptsQualifier();
            }
            case this._regions.length === 1: {
                return this.prepareRegionQualifier();
            }
            case this._regions.length > 1: {
                return this.prepareRegionsQualifier();
            }
        }
    };
    GenerativeRemove.prototype.preparePromptQualifier = function () {
        var prompt = this._prompts[0];
        var str = "gen_remove:" + new internal_qualifier_QualifierValue.QualifierValue("prompt_" + prompt).toString();
        if (this._detectMultiple) {
            str += ";" + new internal_qualifier_QualifierValue.QualifierValue("multiple_true").toString();
        }
        this.addQualifier(new internal_qualifier_Qualifier.Qualifier("e", str));
    };
    GenerativeRemove.prototype.preparePromptsQualifier = function () {
        var prompts = this._prompts;
        var str = "gen_remove:" + new internal_qualifier_QualifierValue.QualifierValue("prompt_(" + prompts.join(";") + ")").toString();
        this.addQualifier(new internal_qualifier_Qualifier.Qualifier("e", str));
    };
    GenerativeRemove.prototype.prepareRegionQualifier = function () {
        var region = this.stringifyRegion(this._regions[0]);
        var str = "gen_remove:" + new internal_qualifier_QualifierValue.QualifierValue("region_" + region).toString();
        this.addQualifier(new internal_qualifier_Qualifier.Qualifier("e", str));
    };
    GenerativeRemove.prototype.prepareRegionsQualifier = function () {
        var _this = this;
        var regions = this._regions.map(function (region) { return _this.stringifyRegion(region); });
        var str = "gen_remove:" + new internal_qualifier_QualifierValue.QualifierValue("region_(" + regions.join(";") + ")").toString();
        this.addQualifier(new internal_qualifier_Qualifier.Qualifier("e", str));
    };
    GenerativeRemove.prototype.stringifyRegion = function (region) {
        var x = region.x, y = region.y, width = region.width, height = region.height;
        return "(x_" + x + ";y_" + y + ";w_" + width + ";h_" + height + ")";
    };
    GenerativeRemove.fromJson = function (actionModel) {
        var prompts = actionModel.prompts, regions = actionModel.regions, detectMultiple = actionModel.detectMultiple;
        var result = new this();
        if (regions) {
            result.regions(regions);
        }
        if (prompts) {
            result.prompts(prompts);
        }
        if (detectMultiple) {
            result.detectMultiple(detectMultiple);
        }
        return result;
    };
    return GenerativeRemove;
}(internal_Action.Action));

exports.GenerativeRemove = GenerativeRemove;
