'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib_es6 = require('../../../tslib.es6-5bb8bdb3.cjs');
var qualifiers_background_shared_base_BackgroundQualifier = require('./base/BackgroundQualifier.cjs');
require('../../../internal/qualifier/Qualifier.cjs');
require('../../../internal/qualifier/QualifierValue.cjs');
require('../../../internal/models/QualifierModel.cjs');
require('../../../internal/models/qualifierToJson.cjs');
require('../../../internal/utils/unsupportedError.cjs');

/**
 * @description Automatically fills the padded area using generative AI to extend the image seamlessly.
 * Optionally include a prompt to guide the image generation.
 * @memberOf Qualifiers.Background
 */
var BackgroundGenerativeFillQualifier = /** @class */ (function (_super) {
    tslib_es6.__extends(BackgroundGenerativeFillQualifier, _super);
    function BackgroundGenerativeFillQualifier(backgroundValue) {
        var _this = _super.call(this, backgroundValue) || this;
        _this._prompt = getPromptFromBackgroundValue(backgroundValue);
        _this._backgroundType = 'generativeFill';
        return _this;
    }
    BackgroundGenerativeFillQualifier.prototype.getPrompt = function () {
        return this._prompt;
    };
    BackgroundGenerativeFillQualifier.prototype.getBackgroundType = function () {
        return this._backgroundType;
    };
    /**
     * @description
     * Override the toString() function to explicitly stringify the qualifier.
     */
    BackgroundGenerativeFillQualifier.prototype.toString = function () {
        return "b_gen_fill" + (this._prompt ? ":prompt_" + this._prompt : '');
    };
    BackgroundGenerativeFillQualifier.createInstanceFromModel = function (backgroundModel) {
        var backgroundValue = "gen_fill" + (backgroundModel.prompt ? ":prompt_" + backgroundModel.prompt : '');
        return new BackgroundGenerativeFillQualifier(backgroundValue);
    };
    return BackgroundGenerativeFillQualifier;
}(qualifiers_background_shared_base_BackgroundQualifier.BackgroundQualifier));
/**
 * @description Helper for checking if the background value is type of Generative Fill.
 */
function isGenerativeFillBackgroundValue(backgroundValue) {
    return typeof backgroundValue === 'string' && backgroundValue.startsWith('gen_fill');
}
/**
 * @description Helper for getting prompt from the Generative Fill background value.
 */
function getPromptFromBackgroundValue(backgroundValue) {
    return backgroundValue.split(':prompt_')[1];
}

exports.BackgroundGenerativeFillQualifier = BackgroundGenerativeFillQualifier;
exports.getPromptFromBackgroundValue = getPromptFromBackgroundValue;
exports.isGenerativeFillBackgroundValue = isGenerativeFillBackgroundValue;
